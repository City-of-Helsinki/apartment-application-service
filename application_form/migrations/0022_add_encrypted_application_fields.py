# Generated by Django 2.2.24 on 2021-06-18 10:45
import django.core.validators
import pgcrypto.fields
import uuid
from django.db import migrations

import apartment_application_service.fields
import application_form.enums


def copy_values(apps, schema_editor):
    Application = apps.get_model("application_form", "Application")
    for instance in Application.objects.all().iterator():
        instance.encrypted_external_uuid = instance.external_uuid
        instance.encrypted_applicants_count = instance.applicants_count
        instance.encrypted_type = instance.type
        instance.encrypted_right_of_residence = instance.right_of_residence
        instance.encrypted_has_children = instance.has_children
        instance.save()

    Applicant = apps.get_model("application_form", "Applicant")
    for instance in Applicant.objects.all().iterator():
        instance.encrypted_external_uuid = instance.external_uuid
        instance.encrypted_first_name = instance.first_name
        instance.encrypted_last_name = instance.last_name
        instance.encrypted_email = instance.email
        instance.encrypted_phone_number = instance.phone_number
        instance.encrypted_street_address = instance.street_address
        instance.encrypted_city = instance.city
        instance.encrypted_postal_code = instance.postal_code
        instance.encrypted_age = instance.age
        instance.encrypted_date_of_birth = instance.date_of_birth
        instance.encrypted_ssn_suffix = instance.ssn_suffix
        instance.encrypted_contact_language = instance.contact_language
        instance.encrypted_is_primary_applicant = instance.is_primary_applicant
        instance.save()

    ApplicationApartment = apps.get_model("application_form", "ApplicationApartment")
    for instance in ApplicationApartment.objects.all().iterator():
        instance.encrypted_priority_number = instance.priority_number
        instance.save()


class Migration(migrations.Migration):

    dependencies = [
        ("application_form", "0021_application_date_of_birth_ssn_suffix"),
        ("pgcrypto", "0001_add_pgcrypto_extension"),
    ]

    operations = [
        migrations.AddField(
            model_name="applicant",
            name="encrypted_age",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                null=True, verbose_name="age"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_city",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                null=True, max_length=50, verbose_name="city"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_contact_language",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                choices=[("fi", "Finnish"), ("sv", "Swedish"), ("en", "English")],
                max_length=2,
                null=True,
                verbose_name="contact language",
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_date_of_birth",
            field=pgcrypto.fields.DatePGPPublicKeyField(
                null=True, verbose_name="date of birth"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_email",
            field=pgcrypto.fields.EmailPGPPublicKeyField(
                null=True, max_length=254, verbose_name="email"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_first_name",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                null=True, max_length=30, verbose_name="first name"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_is_primary_applicant",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                null=True, verbose_name="is primary applicant"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_last_name",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                null=True, max_length=150, verbose_name="last name"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_phone_number",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                null=True, max_length=40, verbose_name="phone number"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_postal_code",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                null=True, max_length=10, verbose_name="postal code"
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_ssn_suffix",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                null=True,
                max_length=5,
                validators=[django.core.validators.MinLengthValidator(5)],
                verbose_name="personal identity code suffix",
            ),
        ),
        migrations.AddField(
            model_name="applicant",
            name="encrypted_street_address",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                null=True, max_length=200, verbose_name="street address"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="encrypted_applicants_count",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                null=True, verbose_name="applicants count"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="encrypted_external_uuid",
            field=apartment_application_service.fields.UUIDPGPPublicKeyField(
                null=True,
                editable=False,
                verbose_name="application identifier",
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="encrypted_has_children",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                null=True, verbose_name="has children"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="encrypted_right_of_residence",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=10, null=True, verbose_name="right of residence number"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="encrypted_type",
            field=apartment_application_service.fields.EnumPGPPublicKeyField(
                null=True,
                enum=application_form.enums.ApplicationType,
                max_length=15,
                verbose_name="application type",
            ),
        ),
        migrations.AddField(
            model_name="applicationapartment",
            name="encrypted_priority_number",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                null=True, verbose_name="priority number"
            ),
        ),
        migrations.RunPython(copy_values, reverse_code=migrations.RunPython.noop),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_age",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(verbose_name="age"),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_city",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=50, verbose_name="city"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_date_of_birth",
            field=pgcrypto.fields.DatePGPPublicKeyField(verbose_name="date of birth"),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_email",
            field=pgcrypto.fields.EmailPGPPublicKeyField(
                max_length=254, verbose_name="email"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_first_name",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=30, verbose_name="first name"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_is_primary_applicant",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                verbose_name="is primary applicant"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_last_name",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=150, verbose_name="last name"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_phone_number",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=40, verbose_name="phone number"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_postal_code",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=10, verbose_name="postal code"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_ssn_suffix",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=5,
                validators=[django.core.validators.MinLengthValidator(5)],
                verbose_name="personal identity code suffix",
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_street_address",
            field=pgcrypto.fields.CharPGPPublicKeyField(
                max_length=200, verbose_name="street address"
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="encrypted_applicants_count",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                verbose_name="applicants count"
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="encrypted_external_uuid",
            field=apartment_application_service.fields.UUIDPGPPublicKeyField(
                editable=False,
                verbose_name="application identifier",
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="encrypted_has_children",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(verbose_name="has children"),
        ),
        migrations.AlterField(
            model_name="application",
            name="encrypted_type",
            field=apartment_application_service.fields.EnumPGPPublicKeyField(
                enum=application_form.enums.ApplicationType,
                max_length=15,
                verbose_name="application type",
            ),
        ),
        migrations.AlterField(
            model_name="applicationapartment",
            name="encrypted_priority_number",
            field=pgcrypto.fields.IntegerPGPPublicKeyField(
                verbose_name="priority number"
            ),
        ),
        migrations.AlterField(
            model_name="applicant",
            name="encrypted_is_primary_applicant",
            field=apartment_application_service.fields.BooleanPGPPublicKeyField(
                default=False, verbose_name="is primary applicant"
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="encrypted_external_uuid",
            field=apartment_application_service.fields.UUIDPGPPublicKeyField(
                default=uuid.uuid4,
                editable=False,
                verbose_name="application identifier",
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="encrypted_has_children",
            field=apartment_application_service.fields.BooleanPGPPublicKeyField(
                default=False, verbose_name="has children"
            ),
        ),
    ]
